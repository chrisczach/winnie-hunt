{"ast":null,"code":"import _classCallCheck from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      map: [],\n      radar: null,\n      steps: null\n    };\n\n    _this.startGameHandler = function () {\n      var map = [];\n\n      for (var row = 0; row < 10; row++) {\n        var rowArr = [];\n\n        for (var cell = 0; cell < 10; cell++) {\n          rowArr.push({\n            winnie: false,\n            wonton: false,\n            tracked: false\n          });\n        }\n\n        rowArr.push(map);\n      }\n\n      ;\n      map[Math.floor(Math.random() * 10)][Math.floor(Math.random() * 10)] = {\n        winnie: false,\n        wonton: false,\n        tracked: false\n      };\n      map[1][1];\n\n      _this.setState({\n        map: map\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, console.log(this.state));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ChrisCzach/Documents/Projects/winnie-hunt/src/App.js"],"names":["React","Component","App","state","map","radar","steps","startGameHandler","row","rowArr","cell","push","winnie","wonton","tracked","Math","floor","random","setState","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE,EADC;AAGNC,MAAAA,KAAK,EAAE,IAHD;AAINC,MAAAA,KAAK,EAAE;AAJD,K;;UAORC,gB,GAAmB,YAAM;AACvB,UAAMH,GAAG,GAAG,EAAZ;;AACA,WAAI,IAAII,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAG,EAAvB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,YAAMC,MAAM,GAAG,EAAf;;AACA,aAAI,IAAIC,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAG,EAAzB,EAA6BA,IAAI,EAAjC,EAAqC;AACnCD,UAAAA,MAAM,CAACE,IAAP,CAAY;AAACC,YAAAA,MAAM,EAAE,KAAT;AAAgBC,YAAAA,MAAM,EAAE,KAAxB;AAA+BC,YAAAA,OAAO,EAAE;AAAxC,WAAZ;AACD;;AACDL,QAAAA,MAAM,CAACE,IAAP,CAAYP,GAAZ;AACD;;AAAA;AAEDA,MAAAA,GAAG,CAACW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAD,CAAH,CAAkCF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAlC,IAAkE;AAACL,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,MAAM,EAAE,KAAxB;AAA+BC,QAAAA,OAAO,EAAE;AAAxC,OAAlE;AACAV,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP;;AAEA,YAAKc,QAAL,CAAc;AACZd,QAAAA,GAAG,EAAHA;AADY,OAAd;AAID,K;;;;;;;6BAEQ;AACP,aACE,0CACCe,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB,CADD,CADF;AAKD;;;;EAjCeF,S;;AAoClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    map: [],\n\n    radar: null,\n    steps: null\n  }\n\n  startGameHandler = () => {\n    const map = [];\n    for(let row = 0; row < 10; row++) {\n      const rowArr = [];\n      for(let cell = 0; cell < 10; cell++) {\n        rowArr.push({winnie: false, wonton: false, tracked: false})\n      }\n      rowArr.push(map)\n    };\n\n    map[Math.floor(Math.random()*10)][Math.floor(Math.random()*10)] = {winnie: false, wonton: false, tracked: false}\n    map[1][1]\n\n    this.setState({\n      map\n      \n    })\n  }\n\n  render() {\n    return (\n      <>\n      {console.log(this.state)}\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}