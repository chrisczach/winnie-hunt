{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsRvh = containsRvh;\nexports.default = void 0;\n\nvar _jestGetType = _interopRequireDefault(require(\"jest-get-type\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction containsRvh(propertyValue) {\n  // TODO: when regexp is lifted up the lexical scope, to be used\n  // in both `containsRvh` and `replaceRvhWithPx`, some tests start to\n  // fail. Seems like a regexp object contains some weird state that\n  // changes after executions; executions interfere with each other.\n  // It would be nice to figure out what is the problem exactly.\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/;\n  return rvhRegex.test(propertyValue);\n}\n\nfunction replaceRvhWithPx(propertyStringValue, windowHeight) {\n  // regexp is global to make #replace work multiple times\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/g;\n  return propertyStringValue.replace(rvhRegex, function (_, rvh) {\n    return \"\".concat(windowHeight * parseFloat(rvh) / 100, \"px\");\n  });\n}\n\nfunction throwOnBadArgs(givenStyle, windowHeight) {\n  if ((0, _jestGetType.default)(givenStyle) !== 'object' && givenStyle !== undefined) throw Error(\"style (the first argument) must be an object or undefined\");\n  if (typeof windowHeight !== 'number' || windowHeight < 0) throw Error('Second argument (windowHeight) must be a non-negative number');\n}\n\nfunction convertStyle(givenStyle, windowHeight) {\n  throwOnBadArgs(givenStyle, windowHeight); // If style is not passed, implicit {height: '100rvh'} style is used.\n\n  var defaultStyle = {\n    height: '100rvh'\n  };\n  var usedStyle = givenStyle === undefined ? defaultStyle : givenStyle;\n  var convertedStyle = {};\n  Object.keys(usedStyle).forEach(function (key) {\n    // if a value contains no rvh unit, it's used as is, otherwise converted\n    // to px; 1rvh = (window.innerHeight / 100)px\n    convertedStyle[key] = replaceRvhWithPx(usedStyle[key], windowHeight);\n  });\n  return convertedStyle;\n}\n\nvar _default = convertStyle;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}