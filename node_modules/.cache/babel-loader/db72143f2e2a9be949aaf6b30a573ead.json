{"ast":null,"code":"import _objectSpread from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ChrisCzach/Documents/Projects/winnie-hunt/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport GameMap from './GameMap';\nimport Controls from './Controls';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      map: [],\n      wontonLocation: null,\n      winnieLocation: null,\n      radar: null,\n      steps: null,\n      win: false\n    };\n\n    _this.startGameHandler = function () {\n      var map = [];\n\n      for (var row = 0; row < 10; row++) {\n        var rowArr = [];\n\n        for (var cell = 0; cell < 10; cell++) {\n          rowArr.push({\n            winnie: false,\n            wonton: false,\n            tracked: false\n          });\n        }\n\n        map.push(rowArr);\n      }\n\n      ;\n      var wontonLocation = {\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10)\n      };\n      var winnieLocation = {\n        x: 0,\n        y: 0\n      };\n\n      var setWinnie = function setWinnie() {\n        var coords = {\n          x: Math.floor(Math.random() * 10),\n          y: Math.floor(Math.random() * 10)\n        };\n\n        if (wontonLocation.x === coords.x && wontonLocation.y === coords.y) {\n          return setWinnie();\n        }\n\n        return coords;\n      };\n\n      map[wontonLocation.y][wontonLocation.x] = {\n        winnie: false,\n        wonton: true,\n        tracked: false\n      };\n      map[coords.y][winnieLocation.x] = {\n        winnie: true,\n        wonton: false,\n        tracked: false\n      };\n      var radar = Math.abs(wontonLocation.x - winnieLocation.x) + Math.abs(wontonLocation.y - winnieLocation.y);\n      var win = false;\n\n      _this.setState({\n        map: map,\n        wontonLocation: wontonLocation,\n        winnieLocation: winnieLocation,\n        radar: radar,\n        win: win\n      });\n    };\n\n    _this.moveWinnieHandler = function (e) {\n      var steps = _this.state.steps;\n\n      var map = _toConsumableArray(_this.state.map);\n\n      var oldWinnieLocation = _objectSpread({}, _this.state.winnieLocation);\n\n      var winnieLocation = _objectSpread({}, _this.state.winnieLocation);\n\n      var direction = e.target.value;\n\n      var wontonLocation = _objectSpread({}, _this.state.wontonLocation);\n\n      if (direction === \"up\") {\n        winnieLocation.y -= 1;\n      }\n\n      ;\n\n      if (direction === \"down\") {\n        winnieLocation.y += 1;\n      }\n\n      ;\n\n      if (direction === \"left\") {\n        winnieLocation.x -= 1;\n      }\n\n      ;\n\n      if (direction === \"right\") {\n        winnieLocation.x += 1;\n      }\n\n      ;\n      winnieLocation.x = Math.max(0, winnieLocation.x);\n      winnieLocation.x = Math.min(9, winnieLocation.x);\n      winnieLocation.y = Math.max(0, winnieLocation.y);\n      winnieLocation.y = Math.min(9, winnieLocation.y);\n      var radar = Math.abs(wontonLocation.x - winnieLocation.x) + Math.abs(wontonLocation.y - winnieLocation.y);\n      console.log(e.target.value);\n      console.log(winnieLocation);\n      map[oldWinnieLocation.y][oldWinnieLocation.x] = {\n        winnie: false,\n        wonton: false,\n        tracked: true\n      };\n      map[winnieLocation.y][winnieLocation.x] = {\n        winnie: true,\n        wonton: false,\n        tracked: false\n      };\n\n      if (winnieLocation.x === oldWinnieLocation.x && winnieLocation.y === oldWinnieLocation.y) {\n        return null;\n      } else {\n        steps++;\n      }\n\n      ;\n      var win = false;\n\n      if (wontonLocation.x === winnieLocation.x && wontonLocation.y === winnieLocation.y) {\n        win = true;\n      }\n\n      _this.setState({\n        winnieLocation: winnieLocation,\n        map: map,\n        radar: radar,\n        steps: steps,\n        win: win\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n        onClick: this.startGameHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Start Game\"), \" \", this.state.win ? \"It's Snack time!!\" : \"Go! Winnie Go!! \".concat(this.state.radar, \" steps from your snack!\"), React.createElement(GameMap, {\n        win: this.state.win,\n        map: this.state.map,\n        winnieMove: this.moveWinnieHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Controls, {\n        moveWinnie: this.moveWinnieHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ChrisCzach/Documents/Projects/winnie-hunt/src/App.js"],"names":["React","Component","GameMap","Controls","App","state","map","wontonLocation","winnieLocation","radar","steps","win","startGameHandler","row","rowArr","cell","push","winnie","wonton","tracked","x","Math","floor","random","y","setWinnie","coords","abs","setState","moveWinnieHandler","e","oldWinnieLocation","direction","target","value","max","min","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameMap from './GameMap';\nimport Controls from './Controls';\n\nclass App extends Component {\n  state = {\n    map: [],\n    wontonLocation: null,\n    winnieLocation: null,\n    radar: null,\n    steps: null,\n    win: false\n  }\n\n  startGameHandler = () => {\n    const map = [];\n    for(let row = 0; row < 10; row++) {\n      const rowArr = [];\n      for(let cell = 0; cell < 10; cell++) {\n        rowArr.push({winnie: false, wonton: false, tracked: false})\n      }\n      map.push(rowArr);\n    };\n    const wontonLocation = {x:Math.floor(Math.random()*10), y: Math.floor(Math.random()*10)};\n    const winnieLocation = {x:0, y:0};\n    const setWinnie = () => {\n      const coords = {x:Math.floor(Math.random()*10), y: Math.floor(Math.random()*10)};\n      if(wontonLocation.x === coords.x && wontonLocation.y === coords.y) { return setWinnie()}\n      return coords;\n\n    }\n    map[wontonLocation.y][wontonLocation.x] = {winnie: false, wonton: true, tracked: false};\n    map[coords.y][winnieLocation.x] = {winnie: true, wonton: false, tracked: false};\n\n    let radar = Math.abs(wontonLocation.x - winnieLocation.x) + Math.abs(wontonLocation.y - winnieLocation.y);\n    let win = false;\n    this.setState({\n      map,\n      wontonLocation,\n      winnieLocation,\n      radar,\n      win\n    })\n  }\n\n  moveWinnieHandler = (e) => {\n    let steps = this.state.steps;\n    const map = [...this.state.map];\n    const oldWinnieLocation = {...this.state.winnieLocation};\n    const winnieLocation = {...this.state.winnieLocation};\n    const direction = e.target.value;\n    const wontonLocation = {...this.state.wontonLocation};\n    if(direction === \"up\") {winnieLocation.y -= 1};\n    if(direction === \"down\") {winnieLocation.y += 1};\n    if(direction === \"left\") {winnieLocation.x -= 1};\n    if(direction === \"right\") {winnieLocation.x += 1};\n    winnieLocation.x = Math.max(0, winnieLocation.x);\n    winnieLocation.x = Math.min(9, winnieLocation.x);\n    winnieLocation.y = Math.max(0, winnieLocation.y);\n    winnieLocation.y = Math.min(9, winnieLocation.y);\n    let radar = Math.abs(wontonLocation.x - winnieLocation.x) + Math.abs(wontonLocation.y - winnieLocation.y);\n\n    console.log(e.target.value);\n    console.log(winnieLocation);\n    map[oldWinnieLocation.y][oldWinnieLocation.x] = {winnie: false, wonton: false, tracked: true};\n    map[winnieLocation.y][winnieLocation.x] = {winnie: true, wonton: false, tracked: false};\n    if(winnieLocation.x === oldWinnieLocation.x && winnieLocation.y === oldWinnieLocation.y) {\n      return null\n    } else {\n      steps++\n    };\n    let win = false;\n    if(wontonLocation.x === winnieLocation.x && wontonLocation.y === winnieLocation.y) {\n      win = true;\n    }\n    \n    this.setState({\n      winnieLocation,\n      map,\n      radar,\n      steps,\n      win\n    });\n    \n\n  }\n  \n  render() {\n    return (\n      <>\n      \n      <button onClick={this.startGameHandler} >Start Game</button> {this.state.win ? \"It's Snack time!!\" : `Go! Winnie Go!! ${this.state.radar} steps from your snack!`}\n      <GameMap win={this.state.win} map={this.state.map} winnieMove={this.moveWinnieHandler}/>\n      <Controls moveWinnie={this.moveWinnieHandler}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}